pipeline {

    agent any

    parameters{
        choice choices: ['chrome', 'firefox'], description: 'Select the browser', name: 'BROWSER'
        choice choices: ['vendor-portal.xml', 'flight-reservation.xml'], description: 'Select the test suite', name: 'TEST_SUITE'
    }

    stages {

        stage('Start Grid'){
            steps {
                sh "docker-compose -f docker-compose_grid.yml up --scale ${params.BROWSER}=2 -d"
            }
        }

        stage('Run Tests'){
            steps {
                sh "BROWSER = params.BROWSER TEST_SUITE=params.TEST_SUITE docker-compose -f docker-compose_tests.yml up --pull=always"
                script {
                    if(fileExists('output/flight-reservation.xml/testng-failed.xml') ||
                            fileExists('output/vendor-portal.xml/testng-failed.xml')){
                        error('failed tests found')
                    }
                }
            }
        }

    }
    post {
        always {
            sh "docker-compose -f docker-compose_grid.yml down"
            sh "docker-compose -f docker-compose_tests.yml down"
            archiveArtifacts artifacts: 'output/flight-reservation/emailable-report.html', followSymlinks: false
            archiveArtifacts artifacts: 'output/vendor-portal/emailable-report.html', followSymlinks: false
        }
    }

}